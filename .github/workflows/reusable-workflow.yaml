name: Reuable workflow
on:
 workflow_call:
  inputs:
    docker_url:
     required: true
     type: string
jobs:
 install-prerequistes:
   runs-on: ubuntu-latest
   steps:
     - name: install terraform
       run: |
         echo "------ Installing Terraform ------"
         wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
         wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
         gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
         echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list        
         sudo apt update 
         sudo apt-get install terraform
         terraform -help
         echo "------ Installing Java ------"
         wget https://download.java.net/java/GA/jdk13.0.1/cec27d702aa74d5a8630c65ae61e4305/9/GPL/openjdk-13.0.1_linux-x64_bin.tar.gz
         tar -xvf openjdk-13.0.1_linux-x64_bin.tar.gz
         mv jdk-13.0.1 /opt/
         echo "JAVA_HOME='/opt/jdk-13.0.1'" >> .profile
         echo "PATH="$JAVA_HOME/bin:$PATH"" >> .profile
         echo  "export PATH" >> .profile
         source .profile
         java -version
         echo "------ Installing Maven ------"
         wget https://dlcdn.apache.org/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.tar.gz
         tar -xvf apache-maven-3.9.9-bin.tar.gz
         mv apache-maven-3.9.9 /opt/
         echo "M2_HOME='/opt/apache-maven-3.9.9'" >> .profile
         echo "PATH="$M2_HOME/bin:$PATH"" >> .profile
         echo "export PATH" >> .profile
         source .profile
         mvn -version
         echo "------ Installing Docker ------"
         sudo apt-get update
         sudo apt-get install ca-certificates curl
         sudo install -m 0755 -d /etc/apt/keyrings
         sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
         sudo chmod a+r /etc/apt/keyrings/docker.asc
         echo  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
         sudo apt-get update
         sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
         docker --version
 Build:
   runs-on: ubuntu-latest
   needs: install-prerequistes
   steps:
     - name: Checkout code
       uses: actions/checkout@v2
     - name: build
       run: |
        mvn compile
        mvn package
 Unit-Test:
   runs-on: ubuntu-latest
   needs: install-prerequistes
   steps:
     - name: Checkout code
       uses: actions/checkout@v2
     - name: Unit Test
       run: |
        mvn test     
 Docker-Build:      
   runs-on: ubuntu-latest
   needs: Build
   steps:
     - name: checout code
       uses: actions/checkout@v2
     - name: Docker Build
       run: |
        echo ${{ input.docker_url }}
        echo Docker Build Started...
 Deployment:
  runs-on: ubuntu-latest
  env:
    env_var: ${{ vars.ENV_CONTEXT_VAR }}
  environment: ${{ vars.ENVIRONMENT_STAGE }}
  steps: 
     - name: checout code
       uses: actions/checkout@v2
     - name: Docker Build
       run: |
        echo Deploying to production...
        echo ::set-output name=status::$status
  
     
